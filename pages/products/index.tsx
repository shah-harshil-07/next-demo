import Head from 'next/head';
import { useEffect, useState } from 'react';
import styles from '../../styles/Home.module.css';
import productStyle from '../../styles/Products.module.css';
import Table from '../../components/table';
import Footer from '../../components/footer';
import { useToast } from '../../helpers/ToasterService';

export default function Products(props: any) {
	const [products, setProducts] = useState([]);
	const [currentPage, setCurrentPage] = useState(1);
	const { showSuccess, showError }: any = useToast();

	useEffect(() => {
		getProducts(0);
	}, []);

	const getProducts = async (skipValue: number) => {
		try {
			let response = await fetch(`/api/products/${skipValue}`);
			let productsResponse = await response.json();

			if (productsResponse?.products?.length) {
				showSuccess("Products fetched successfully!");
				setProducts(productsResponse.products);
			}
		} catch (err) {
			showError("Products fetching has failed!");
			console.log(err);
		}
	}

	const updatePage = (action: string) => {
		let _currentPage: number = 0;
		let skipValue: number = 0;

		if (action === 'increment') {
			_currentPage = currentPage + 1;
			skipValue = currentPage * 10;

			setCurrentPage(_currentPage);
			getProducts(skipValue);
		} else if (currentPage > 1) {
			_currentPage = currentPage - 1;
			skipValue = (_currentPage - 1) * 10;

			setCurrentPage(_currentPage);
			getProducts(skipValue);
		} else if (action === 'decrement' && currentPage === 1) {
			getProducts(0);
		}
	}

	return (
		<div className={styles.container}>
			<Head>
				<title>Next JS Demo App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<Table
				products={products}
				currentPage={currentPage}
				updatePage={(action: string) => updatePage(action)}
				productStyle={productStyle}
			/>

			<Footer quoteData={props?.quote} />
		</div>
	)
}

export async function getStaticProps() {
    try {
        const response = await fetch("https://dummyjson.com/quotes/random");
        const quote = await response.json();

        return { props: { quote } };
    } catch (err) {
        return { props: {} };
    }
}
